import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { api } from "@/utils/api";
import { useState } from 'react';
import type { ShoppingItem } from '@prisma/client';
import ItemModal from '@/components/itemModal';
import { HiX } from 'react-icons/hi';
import { motion } from 'framer-motion';

const Home: NextPage = () => {
	// const hello = api.example.hello.useQuery({ text: 'from tRPC' });

	const [modalOpen, setOpenModal] = useState<boolean>(false);
	const [items, setItems] = useState<ShoppingItem[]>([]);
	const [checkItem, setCheckItem] = useState<ShoppingItem[]>([]);
	// const {} = api.items.addItem.useMutation({
	// 	onSuccess: (item) => {
	// 		setItems((prev) => [...prev, item]);
	// 	},
	// });

	const data = api.items.getAllItems.useQuery(undefined, {
		onSuccess: (shoppingItem) => {
			setItems(shoppingItem);
			const checked = shoppingItem.filter((item) => item.checked);
			setCheckItem(checked);
		},
	});

	const deleteItem = api.items.deleteItem.useMutation({
		onSuccess: (shoppingItem) => {
			setItems((prev) => prev.filter((i) => i.id !== shoppingItem.id));
		},
	});
	const toggleCheckItem = api.items.toggleChecked.useMutation({
		onSuccess: (shoppingItem) => {
			// check if this item is already checked
			if (checkItem.some((item) => item.id === shoppingItem.id)) {
				// remove it from the checked items
				setCheckItem((prev) => prev.filter((item) => item.id !== shoppingItem.id));
			} else {
				// add it to the checked items
				setCheckItem((prev) => [...prev, shoppingItem]);
			}
		},
	});
	if (!data || data.isLoading) return <p>Loading...</p>;
	return (
		<>
			<Head>
				<title>Shopping List</title>
				<meta name='description' content='Generated by create-t3-app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			{modalOpen && <ItemModal setModalOpen={setOpenModal} setItems={setItems} />}
			<main className='mx-auto my-12 max-w-3xl'>
				<div className='flex justify-between'>
					<h2 className='text-2xl font-semibold'>My shopping list</h2>
					<button
						type='button'
						onClick={() => setOpenModal(true)}
						className='transitions rounded-md bg-violet-500 p-2 text-sm text-white hover:bg-violet-600'
					>
						Add shopping item
					</button>
				</div>
				<ul className='mt-4'>
					{items.map((item) => {
						const { id, name } = item;
						return (
							<li key={id} className='flex items-center justify-between'>
								<div className='relative'>
									<div className='pointer-events-none absolute inset-0 flex origin-left items-center justify-center'>
										<motion.div
											initial={{ width: 0 }}
											animate={{
												width: checkItem.some((item) => item.id === id)
													? '100%'
													: 0,
											}}
											transition={{ duration: 0.2, ease: 'easeInOut' }}
											className='h-[2px] w-full translate-y-px bg-red-500'
										/>
									</div>
									<span
										onClick={() => {
											toggleCheckItem.mutate({
												id,
												checked: checkItem.some((item) => item.id === id)
													? false
													: true,
											});
										}}
									>
										{name}
									</span>
								</div>
								<HiX
									onClick={() => {
										deleteItem.mutate({ id: id });
									}}
									className='cursor-pointer text-lg text-red-900'
								/>
							</li>
						);
					})}
				</ul>
			</main>
		</>
	);
};

export default Home;
